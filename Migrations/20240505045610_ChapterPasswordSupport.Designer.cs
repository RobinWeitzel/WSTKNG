// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WSTKNG.Models;

#nullable disable

namespace WSTKNG.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240505045610_ChapterPasswordSupport")]
    partial class ChapterPasswordSupport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("WSTKNG.Models.Chapter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Crawled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HeaderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HeaderValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Published")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeriesID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("SeriesID");

                    b.HasIndex("URL");

                    b.ToTable("Chapters", (string)null);
                });

            modelBuilder.Entity("WSTKNG.Models.Series", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentSelector")
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TemplateID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TitleSelector")
                        .HasColumnType("TEXT");

                    b.Property<string>("TocSelector")
                        .HasColumnType("TEXT");

                    b.Property<string>("TocUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TemplateID");

                    b.ToTable("Series", (string)null);
                });

            modelBuilder.Entity("WSTKNG.Models.Setting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailFrom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KindleEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SMTPHost")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SMTPPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SMTPPort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SMTPUser")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Settings", (string)null);
                });

            modelBuilder.Entity("WSTKNG.Models.Template", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentSelector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleSelector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TocSelector")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Templates", (string)null);
                });

            modelBuilder.Entity("WSTKNG.Models.Chapter", b =>
                {
                    b.HasOne("WSTKNG.Models.Series", "Series")
                        .WithMany("Chapters")
                        .HasForeignKey("SeriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("WSTKNG.Models.Series", b =>
                {
                    b.HasOne("WSTKNG.Models.Template", "Template")
                        .WithMany("Series")
                        .HasForeignKey("TemplateID");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("WSTKNG.Models.Series", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("WSTKNG.Models.Template", b =>
                {
                    b.Navigation("Series");
                });
#pragma warning restore 612, 618
        }
    }
}
